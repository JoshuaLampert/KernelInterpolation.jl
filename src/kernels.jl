"""
    AbstractKernel

An abstract supertype of kernels.
"""
abstract type AbstractKernel end

@doc raw"""
    RadialSymmetricKernel

An abstract supertype of radial symmetric kernels. Radial symmetric
kernels are generated by an even and continuous function
``\Phi: \mathrm{R}^d\to\mathrm{R}``, which is radial-symmetric meaning that
there exists a ``\phi:\mathrm{R}\to\mathrm{R}`` such that
``` math
    \Phi(x) = \phi(\Vert x\Vert).
```
The kernel is then defined by
```math
    K(x, y) = \Phi(x - y).
```
"""
abstract type RadialSymmetricKernel <: AbstractKernel end

# TODO: Which norm? Depends on metric
# Phi(k::RadialSymmetricKernel, x) = phi(k, norm(x))

function (k::RadialSymmetricKernel)(x, y)
    return phi(k, metric(k)(x, y))
end

"""
    metric(k::RadialSymmetricKernel)

Return the metric used by the radial symmetric kernel `k`.
"""
metric(k::RadialSymmetricKernel) = k.metric

@doc raw"""
    GaussKernel(shape_parameter = 1.0; metric=Euclidean())

Gaussian kernel function with
```math
    \phi(r) = \exp(-(shape_parameter * r)^2).
```

See also [`RadialSymmetricKernel`](@ref).
"""
struct GaussKernel{RealT, M} <: RadialSymmetricKernel
    shape_parameter::RealT
    metric::M
end

function GaussKernel(shape_parameter = 1.0; metric = Euclidean())
    GaussKernel{typeof(shape_parameter), typeof(metric)}(shape_parameter, metric)
end

function Base.show(io::IO, k::GaussKernel)
    return print(io, "Gaussian Kernel (shape_parameter = ", k.shape_parameter,
                 ", metric = ", k.metric, ")")
end

phi(k::GaussKernel, r::Real) = exp(-(k.shape_parameter * r)^2)
